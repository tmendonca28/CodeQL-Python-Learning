{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.15.3",
        "notifications" : [ {
          "id" : "py/baseline/expected-extracted-files",
          "name" : "py/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        }, {
          "id" : "cli/database/analyze",
          "name" : "cli/database/analyze",
          "shortDescription" : {
            "text" : "CodeQL CLI: database analyze"
          },
          "fullDescription" : {
            "text" : "CodeQL CLI: database analyze"
          },
          "defaultConfiguration" : {
            "enabled" : true
          }
        } ],
        "rules" : [ {
          "id" : "python/redundant-ifs",
          "name" : "python/redundant-ifs",
          "shortDescription" : {
            "text" : "Find Redundant ifs"
          },
          "fullDescription" : {
            "text" : "Detects redundant ifs in Python code."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security" ],
            "description" : "Detects redundant ifs in Python code.",
            "id" : "python/redundant-ifs",
            "kind" : "problem",
            "name" : "Find Redundant ifs",
            "precision" : "very-high",
            "problem.severity" : "error"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "codeql/python-queries",
        "semanticVersion" : "0.0.0",
        "locations" : [ {
          "uri" : "file:///D:/Development/CodeQL-Python-Learning/queries/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///D:/Development/CodeQL-Python-Learning/queries/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "invocations" : [ {
      "toolExecutionNotifications" : [ {
        "locations" : [ {
          "physicalLocation" : {
            "artifactLocation" : {
              "uri" : "if_statement.py",
              "uriBaseId" : "%SRCROOT%",
              "index" : 0
            }
          }
        } ],
        "message" : {
          "text" : ""
        },
        "level" : "none",
        "descriptor" : {
          "id" : "py/baseline/expected-extracted-files",
          "index" : 0
        },
        "properties" : {
          "formattedMessage" : {
            "text" : ""
          }
        }
      }, {
        "message" : {
          "text" : "A fatal error occurred: Could not process query metadata for D:\\Development\\CodeQL-Python-Learning\\queries\\quick-query.ql.\r\nError was: Cannot process query metadata for a query without the '@kind' metadata property. To learn more, see https://codeql.github.com/docs/writing-codeql-queries/metadata-for-codeql-queries/ [NO_KIND_SPECIFIED]"
        },
        "level" : "error",
        "timeUtc" : "2023-12-07T22:50:11.072+00:00",
        "descriptor" : {
          "id" : "cli/database/analyze",
          "index" : 1
        },
        "properties" : {
          "attributes" : {
            "exitCode" : 2
          },
          "visibility" : {
            "telemetry" : false
          }
        }
      } ],
      "executionSuccessful" : true
    } ],
    "artifacts" : [ {
      "location" : {
        "uri" : "if_statement.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    } ],
    "results" : [ {
      "ruleId" : "python/redundant-ifs",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "python/redundant-ifs",
        "index" : 0
      },
      "message" : {
        "text" : "This 'if' statement is redundant."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "if_statement.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 2,
            "endColumn" : 10
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "77211451feaa8539:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    } ],
    "columnKind" : "unicodeCodePoints",
    "properties" : {
      "semmle.formatSpecifier" : "sarif-latest"
    }
  } ]
}